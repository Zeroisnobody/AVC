//
//  Code for the Maze Section
//  skeleton - print outputs
//
//  Created by Bryony Gatehouse on 5/05/18.
//  Copyright Â© 2018 Bryony Gatehouse. All rights reserved.
//

#include <stdio.h>
#include <time.h>
#include "E101.h"

double e0 = 0;
time_t t0;

int main(){
    init();
    int scan_row = 120;
    while (true){
        
       left = Read_Sensor(0);
       right = Read_Sensor(1);
       front = Read_Sensor(2);
       int error = (left+right)/2;
       
       unsigned char v_go = 0; //change
       double de = error - e0;
       clock_t t1;
       double Kd = -0.05;
       double Kp = -0.005;
       unsigned char dv = error* Kp + de/dt * kd
       
       double v_left = v_go + dv;
       double v_right = v_go - dv;
       
       if(front>50){ // 50 as a guess
            printf("Turn Around: %d", front);
            if (error<0){
                   printf("Turn Around Right: set right full, set left -full, until see front > 50");
            }
            if (error>0){
                   printf("Turn Around Left: set left full, set right -full, until see front > 50");
            }
        }
        else if(error<0){
            printf("Turn Right: %d", v_right);
        }
        else if(error>0){
            printf("Turn Left: %d", v_left);
        }
        else if(error==0){
            printf("Straight");
        }
    }
    e0 = error
    t0 = t1;
    return 0;
}
    
int Read_Sensor(int sensor){
    int half_range;
    int adc_readingmax;
    int adc_readingmin;
    int adc_reading;
    int i;
    for (i=0; i<10;i=i+1) {
        adc_reading = read.analog(sensor);
        if (adc_reading > adc_readingmax){
            adc_readingmax = adc_reading; }
        if (adc_reading < adc_readingmin){
            adc_readingmin = adc_reading;}
        sleep1(0,10000);
    }
    half_range = (adc_readingmax - adc_readingmin)/2;
    printf("Reading Max = %d\n", adc_readingmax);
    printf("Reading Min = %d\n", adc_readingmin);
    sleep1 (0, 500000);
    return half_range;
}
